<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: infrastructure | Adventures of a wannabe geek!]]></title>
  <link href="http://paulstack.co.uk/blog/categories/infrastructure/atom.xml" rel="self"/>
  <link href="http://paulstack.co.uk/"/>
  <updated>2015-12-30T17:20:40+00:00</updated>
  <id>http://paulstack.co.uk/</id>
  <author>
    <name><![CDATA[Paul Stack (@stack72)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Autoscaling Group Notifications with Terraform and AWS Lambda]]></title>
    <link href="http://paulstack.co.uk/blog/2015/12/30/autoscaling-group-notifications-with-terraform-and-aws-lambda/"/>
    <updated>2015-12-30T13:51:00+00:00</updated>
    <id>http://paulstack.co.uk/blog/2015/12/30/autoscaling-group-notifications-with-terraform-and-aws-lambda</id>
    <content type="html"><![CDATA[<p>I use Autoscaling Groups in AWS for all of my systems. The main benefit for me here was to make sure that when a node died in AWS, the Autoscaling Group policy made sure that the node was replaced. I wanted to get some visibility of when the Autoscaling Group was launching and terminating nodes and decided that posting notifications to <a href="https://slack.com/">Slack</a> would be a good way of getting this. With <a href="https://terraform.io/">Terraform</a> and <a href="http://docs.aws.amazon.com/lambda/latest/dg/welcome.html">AWS Lambda</a>, I was able to make this happen.</p>

<p><strong>This post assumes that you are already setup and running with Terraform</strong></p>

<p>Create an IAM Role that allows access to AWS Lambda:</p>

<p>```
resource &ldquo;aws_iam_role&rdquo; &ldquo;slack_iam_lambda&rdquo; {</p>

<pre><code>name = "slack-iam-lambda"
assume_role_policy = &lt;&lt;EOF
</code></pre>

<p>{
  &ldquo;Version&rdquo;: &ldquo;2012-10-17&rdquo;,
  &ldquo;Statement&rdquo;: [</p>

<pre><code>{
  "Action": "sts:AssumeRole",
  "Principal": {
    "Service": "lambda.amazonaws.com"
  },
  "Effect": "Allow",
  "Sid": ""
}
</code></pre>

<p>  ]
}
EOF
}
```</p>

<p>Create a <a href="GIST%20GOES%20HERE">lambda function</a> as follows:</p>

<p><code>
resource "aws_lambda_function" "slack_notify" {
  filename = "slackNotify.zip"
  function_name = "slackNotify"
  role = "${aws_iam_role.slack_iam_lambda.arn}"
  handler = "slackNotify.handler"
}
</code></p>

<p>We assume here, that you have already created a Slack Integration. The hook URL from that integration is required for the lambda contents.</p>

<p>The filename <code>slackNotify.zip</code> is a zip of a file called <code>slackNotify.js</code>. The contents of that js file are <a href="https://gist.github.com/stack72/ad97da2df376754e413a">available</a></p>

<p>Terraform currently does not support hooking AWS Lambda up to SNS Event Sources. Therefore, unfortunately, there is a manual step required to configure the Lambda to talk to the SNS Topic. There is a PR in Terraform to allow this to be automated as well.</p>

<p>In the AWS Console, go to Lambda and then chose the Lambda function.</p>

<p><img src="/images/lambda_function.png" alt="Image" /></p>

<p>Go to the <code>Event Sources</code> tab:</p>

<p><img src="/images/lambda_function_event_sources.png" alt="Image" /></p>

<p>Click on <code>Add Event Source</code> and then choose <code>SNS</code> from the dropdown and then make sure you chose the correct SNS Topic name:</p>

<p><img src="/images/lambda_function_sns_topic.png" alt="Image" /></p>

<p>We then use another Terraform resource to attach the Autoscale Groups to the Lambda as follows:</p>

<p>```
resource &ldquo;aws_autoscaling_notification&rdquo; &ldquo;slack_notifications&rdquo; {
  group_names = [</p>

<pre><code>"admin-api-autoscale-group",
"rundeck-autoscale-group",
</code></pre>

<p>  ]
  notifications  = [</p>

<pre><code>"autoscaling:EC2_INSTANCE_LAUNCH",
"autoscaling:EC2_INSTANCE_TERMINATE",
"autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
"autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
"autoscaling:TEST_NOTIFICATION"
</code></pre>

<p>  ]
  topic_arn = &ldquo;${aws_sns_topic.asg_slack_notifications.arn}&rdquo;
}
```</p>

<p>As we have configured notifications for autoscaling:TEST_NOTIFICATION, when you apply this configuration with Terraform, you will see something similar to the following in Slack:</p>

<p><img src="/images/slack_test_notification.png" alt="Image" /></p>

<p>In the current infrastructure I manage, there are 27 Autoscale groups. I don&rsquo;t really want to add 27 hardcoded group_names in the aws_autoscaling_notifcation in Terraform.</p>

<p>I wanted to take advantage of a <a href="https://www.terraform.io/docs/modules/usage.html">Terraform module</a>. In a nutshell, the module does a lookup of all the Autoscaling Groups in a region and then passes that list into the Terraform resource.</p>

<p>The output of the <a href="https://github.com/stack72/tf_aws_autoscalegroup_names">module</a> looks as follows:</p>

<p>```
{
  &ldquo;variable&rdquo;: {</p>

<pre><code>"autoscalegroup_names": {
  "description": "List of autoscalegroup names for a region",
  "default": {
    "eu-west-1": "admin-api-autoscale-group,dash-autoscale-group,demo-autoscale-group,docker-v2-autoscale-group,elasticsearch-autoscale-group,faces-autoscale-group,internal-api-autoscale-group,jenkins-master-autoscale-group,kafka-autoscale-group,landscapes-autoscale-group",
    "ap-southeast-1": "",
    "ap-southeast-2": "",
    "eu-central-1": "",
    "ap-northeast-1": "",
    "us-east-1": "",
    "sa-east-1": "",
    "us-west-1": "",
    "us-west-2": ""
  }
}
</code></pre>

<p>  }
}
```</p>

<p>I then pass this into the Terraform resource as follows:</p>

<p>```
module &ldquo;autoscalegroups&rdquo; {
  source = &ldquo;github.com/stack72/tf_aws_autoscalegroup_names&rdquo;
  region = &ldquo;${var.aws_region}&rdquo;
}</p>

<p>resource &ldquo;aws_autoscaling_notification&rdquo; &ldquo;slack_notifications&rdquo; {
  group_names = [</p>

<pre><code>"${split(",", module.autoscalegroups.asg_names)}",
</code></pre>

<p>  ]
  notifications  = [</p>

<pre><code>"autoscaling:EC2_INSTANCE_LAUNCH",
"autoscaling:EC2_INSTANCE_TERMINATE",
"autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
"autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
"autoscaling:TEST_NOTIFICATION"
</code></pre>

<p>  ]
  topic_arn = &ldquo;${aws_sns_topic.asg_slack_notifications.arn}&rdquo;
}
```</p>

<p>When anything happens within an Autoscaling Group, I now get notifications as follows:</p>

<p><img src="/images/termination_notification.png" alt="Image" />
<img src="/images/launch_notification.png" alt="Image" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Changing my focus]]></title>
    <link href="http://paulstack.co.uk/blog/2014/01/09/changing-my-focus/"/>
    <updated>2014-01-09T10:11:00+00:00</updated>
    <id>http://paulstack.co.uk/blog/2014/01/09/changing-my-focus</id>
    <content type="html"><![CDATA[<p>For those that know me, you know that I am very passionate about infrastructure and DevOps. Infrastructure is something that we, as developers, don&rsquo;t really give a lot of thought to. DevOps is something that will make our businesses more successful. So, I am changing the job role that I have.</p>

<p>From now, I am no longer focusing on writing application code. Instead I am going to spend my time focusing on the following areas:</p>

<ul>
<li>Be the facilitator to help our engineering team be much better by creating a DevOps culture</li>
<li>Writing code to control our infrastructure</li>
<li>Learning about the weird and wonderful ways of operations</li>
</ul>


<p>DevOps is very important to me. When a company has a great culture, things get done. Operations work is smooth, software delivery is smooth and the teams are truly focused on achieving the goals of the business. Without a DevOps culture, things are not as smooth as they could be. In order to allow our developers to more faster, we will be building better systems (e.g. provisioning, configuration management, monitoring, logging etc.) to allow them to really achieve &lsquo;situational awareness&rsquo;</p>

<p>I heard the term &lsquo;situational awareness&rsquo; just over a year ago. It was defined as &lsquo;knowing what is going on around you&rsquo;. Putting this into context, do you know what is going on with your applications in production? I certainly didn&rsquo;t. This is essential to understand how your software is performing. I will be trying to help our engineers to try and solve this issue by helping them build better infrastructure management systems.</p>

<p>Operations is something that I know very little about. By exposing myself to this world, I feel it will help me understand the continual frustrations that operations and development staff have towards each other.</p>

<p>As you can see, I am truly trying to be a DevOps advocate. I want to be the person that helps the teams talk to each other and help each other rather than (traditionally) having silos. I will still be trying to talk at developer events / conferences. I feel that I can really help developers understand more about DevOps and how it can be successful.</p>

<p>This is a very exciting change for me! Let&rsquo;s see how it goes&hellip;.</p>
]]></content>
  </entry>
  
</feed>
